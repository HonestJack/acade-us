
Projeto.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000c  00800100  00000204  00000298  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000204  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000002  0080010c  0080010c  000002a4  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000002a4  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000002d4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000070  00000000  00000000  00000314  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000951  00000000  00000000  00000384  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000781  00000000  00000000  00000cd5  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000003b5  00000000  00000000  00001456  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000e8  00000000  00000000  0000180c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004e9  00000000  00000000  000018f4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000014d  00000000  00000000  00001ddd  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000060  00000000  00000000  00001f2a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 35 00 	jmp	0x6a	; 0x6a <__ctors_end>
   4:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
   8:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
   c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  10:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  14:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  18:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  1c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  20:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  24:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  28:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  2c:	0c 94 5f 00 	jmp	0xbe	; 0xbe <__vector_11>
  30:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  34:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  38:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  3c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  40:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  44:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  48:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  4c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  50:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  54:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  58:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  5c:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  60:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>
  64:	0c 94 5d 00 	jmp	0xba	; 0xba <__bad_interrupt>

00000068 <__ctors_start>:
  68:	f5 00       	.word	0x00f5	; ????

0000006a <__ctors_end>:
  6a:	11 24       	eor	r1, r1
  6c:	1f be       	out	0x3f, r1	; 63
  6e:	cf ef       	ldi	r28, 0xFF	; 255
  70:	d8 e0       	ldi	r29, 0x08	; 8
  72:	de bf       	out	0x3e, r29	; 62
  74:	cd bf       	out	0x3d, r28	; 61

00000076 <__do_copy_data>:
  76:	11 e0       	ldi	r17, 0x01	; 1
  78:	a0 e0       	ldi	r26, 0x00	; 0
  7a:	b1 e0       	ldi	r27, 0x01	; 1
  7c:	e4 e0       	ldi	r30, 0x04	; 4
  7e:	f2 e0       	ldi	r31, 0x02	; 2
  80:	02 c0       	rjmp	.+4      	; 0x86 <__do_copy_data+0x10>
  82:	05 90       	lpm	r0, Z+
  84:	0d 92       	st	X+, r0
  86:	ac 30       	cpi	r26, 0x0C	; 12
  88:	b1 07       	cpc	r27, r17
  8a:	d9 f7       	brne	.-10     	; 0x82 <__do_copy_data+0xc>

0000008c <__do_clear_bss>:
  8c:	21 e0       	ldi	r18, 0x01	; 1
  8e:	ac e0       	ldi	r26, 0x0C	; 12
  90:	b1 e0       	ldi	r27, 0x01	; 1
  92:	01 c0       	rjmp	.+2      	; 0x96 <.do_clear_bss_start>

00000094 <.do_clear_bss_loop>:
  94:	1d 92       	st	X+, r1

00000096 <.do_clear_bss_start>:
  96:	ae 30       	cpi	r26, 0x0E	; 14
  98:	b2 07       	cpc	r27, r18
  9a:	e1 f7       	brne	.-8      	; 0x94 <.do_clear_bss_loop>

0000009c <__do_global_ctors>:
  9c:	10 e0       	ldi	r17, 0x00	; 0
  9e:	c5 e3       	ldi	r28, 0x35	; 53
  a0:	d0 e0       	ldi	r29, 0x00	; 0
  a2:	04 c0       	rjmp	.+8      	; 0xac <__do_global_ctors+0x10>
  a4:	21 97       	sbiw	r28, 0x01	; 1
  a6:	fe 01       	movw	r30, r28
  a8:	0e 94 fa 00 	call	0x1f4	; 0x1f4 <__tablejump2__>
  ac:	c4 33       	cpi	r28, 0x34	; 52
  ae:	d1 07       	cpc	r29, r17
  b0:	c9 f7       	brne	.-14     	; 0xa4 <__do_global_ctors+0x8>
  b2:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <main>
  b6:	0c 94 00 01 	jmp	0x200	; 0x200 <_exit>

000000ba <__bad_interrupt>:
  ba:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000be <__vector_11>:
	TIFR1 |= (1 << 0); // Clear Flag
	while(!(TIFR0 & (1 << 0)))
	{
		
	}
}
  be:	1f 92       	push	r1
  c0:	0f 92       	push	r0
  c2:	0f b6       	in	r0, 0x3f	; 63
  c4:	0f 92       	push	r0
  c6:	11 24       	eor	r1, r1
  c8:	8f 93       	push	r24
  ca:	9f 93       	push	r25
  cc:	b1 9a       	sbi	0x16, 1	; 22
  ce:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <__data_end>
  d2:	90 91 0d 01 	lds	r25, 0x010D	; 0x80010d <__data_end+0x1>
  d6:	01 96       	adiw	r24, 0x01	; 1
  d8:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <__data_end+0x1>
  dc:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <__data_end>
  e0:	9f 91       	pop	r25
  e2:	8f 91       	pop	r24
  e4:	0f 90       	pop	r0
  e6:	0f be       	out	0x3f, r0	; 63
  e8:	0f 90       	pop	r0
  ea:	1f 90       	pop	r1
  ec:	18 95       	reti

000000ee <_Z11timer_40umsv>:
  ee:	82 e0       	ldi	r24, 0x02	; 2
  f0:	84 bd       	out	0x24, r24	; 36
  f2:	85 bd       	out	0x25, r24	; 37
  f4:	16 bc       	out	0x26, r1	; 38
  f6:	80 e5       	ldi	r24, 0x50	; 80
  f8:	87 bd       	out	0x27, r24	; 39
  fa:	a8 9a       	sbi	0x15, 0	; 21
  fc:	a8 9b       	sbis	0x15, 0	; 21
  fe:	fe cf       	rjmp	.-4      	; 0xfc <_Z11timer_40umsv+0xe>
 100:	08 95       	ret

00000102 <_Z12timer_1_64msv>:
 102:	82 e0       	ldi	r24, 0x02	; 2
 104:	84 bd       	out	0x24, r24	; 36
 106:	84 e0       	ldi	r24, 0x04	; 4
 108:	85 bd       	out	0x25, r24	; 37
 10a:	16 bc       	out	0x26, r1	; 38
 10c:	87 e6       	ldi	r24, 0x67	; 103
 10e:	87 bd       	out	0x27, r24	; 39
 110:	a8 9a       	sbi	0x15, 0	; 21
 112:	a8 9b       	sbis	0x15, 0	; 21
 114:	fe cf       	rjmp	.-4      	; 0x112 <_Z12timer_1_64msv+0x10>
 116:	08 95       	ret

00000118 <_Z12lcd_functionc>:
 118:	2c 9a       	sbi	0x05, 4	; 5
 11a:	95 b1       	in	r25, 0x05	; 5
 11c:	90 7f       	andi	r25, 0xF0	; 240
 11e:	95 b9       	out	0x05, r25	; 5
 120:	95 b1       	in	r25, 0x05	; 5
 122:	28 2f       	mov	r18, r24
 124:	22 95       	swap	r18
 126:	2f 70       	andi	r18, 0x0F	; 15
 128:	92 2b       	or	r25, r18
 12a:	95 b9       	out	0x05, r25	; 5
 12c:	2c 98       	cbi	0x05, 4	; 5
 12e:	2c 9a       	sbi	0x05, 4	; 5
 130:	95 b1       	in	r25, 0x05	; 5
 132:	90 7f       	andi	r25, 0xF0	; 240
 134:	95 b9       	out	0x05, r25	; 5
 136:	95 b1       	in	r25, 0x05	; 5
 138:	28 2f       	mov	r18, r24
 13a:	2f 70       	andi	r18, 0x0F	; 15
 13c:	92 2b       	or	r25, r18
 13e:	95 b9       	out	0x05, r25	; 5
 140:	2c 98       	cbi	0x05, 4	; 5
 142:	81 30       	cpi	r24, 0x01	; 1
 144:	19 f0       	breq	.+6      	; 0x14c <_Z12lcd_functionc+0x34>
 146:	0e 94 77 00 	call	0xee	; 0xee <_Z11timer_40umsv>
 14a:	08 95       	ret
 14c:	0e 94 81 00 	call	0x102	; 0x102 <_Z12timer_1_64msv>
 150:	08 95       	ret

00000152 <_Z12init_displayv>:
 152:	5f 98       	cbi	0x0b, 7	; 11
 154:	2c 9a       	sbi	0x05, 4	; 5
 156:	85 b1       	in	r24, 0x05	; 5
 158:	80 7f       	andi	r24, 0xF0	; 240
 15a:	85 b9       	out	0x05, r24	; 5
 15c:	29 9a       	sbi	0x05, 1	; 5
 15e:	2c 98       	cbi	0x05, 4	; 5
 160:	0e 94 77 00 	call	0xee	; 0xee <_Z11timer_40umsv>
 164:	88 e2       	ldi	r24, 0x28	; 40
 166:	0e 94 8c 00 	call	0x118	; 0x118 <_Z12lcd_functionc>
 16a:	86 e0       	ldi	r24, 0x06	; 6
 16c:	0e 94 8c 00 	call	0x118	; 0x118 <_Z12lcd_functionc>
 170:	8c e0       	ldi	r24, 0x0C	; 12
 172:	0e 94 8c 00 	call	0x118	; 0x118 <_Z12lcd_functionc>
 176:	87 e1       	ldi	r24, 0x17	; 23
 178:	0e 94 8c 00 	call	0x118	; 0x118 <_Z12lcd_functionc>
 17c:	81 e0       	ldi	r24, 0x01	; 1
 17e:	0e 94 8c 00 	call	0x118	; 0x118 <_Z12lcd_functionc>
 182:	08 95       	ret

00000184 <_Z12print_stringPc>:
 184:	0f 93       	push	r16
 186:	1f 93       	push	r17
 188:	cf 93       	push	r28
 18a:	fc 01       	movw	r30, r24
 18c:	5f 9a       	sbi	0x0b, 7	; 11
 18e:	80 81       	ld	r24, Z
 190:	88 23       	and	r24, r24
 192:	59 f0       	breq	.+22     	; 0x1aa <_Z12print_stringPc+0x26>
 194:	8f 01       	movw	r16, r30
 196:	c0 e0       	ldi	r28, 0x00	; 0
 198:	0e 94 8c 00 	call	0x118	; 0x118 <_Z12lcd_functionc>
 19c:	cf 5f       	subi	r28, 0xFF	; 255
 19e:	f8 01       	movw	r30, r16
 1a0:	ec 0f       	add	r30, r28
 1a2:	f1 1d       	adc	r31, r1
 1a4:	80 81       	ld	r24, Z
 1a6:	81 11       	cpse	r24, r1
 1a8:	f7 cf       	rjmp	.-18     	; 0x198 <_Z12print_stringPc+0x14>
 1aa:	5f 98       	cbi	0x0b, 7	; 11
 1ac:	cf 91       	pop	r28
 1ae:	1f 91       	pop	r17
 1b0:	0f 91       	pop	r16
 1b2:	08 95       	ret

000001b4 <_Z4initv>:
 1b4:	8f ef       	ldi	r24, 0xFF	; 255
 1b6:	84 b9       	out	0x04, r24	; 4
 1b8:	8a b9       	out	0x0a, r24	; 10
 1ba:	84 e0       	ldi	r24, 0x04	; 4
 1bc:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__DATA_REGION_ORIGIN__+0x20>
 1c0:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__DATA_REGION_ORIGIN__+0x21>
 1c4:	10 92 89 00 	sts	0x0089, r1	; 0x800089 <__DATA_REGION_ORIGIN__+0x29>
 1c8:	10 92 88 00 	sts	0x0088, r1	; 0x800088 <__DATA_REGION_ORIGIN__+0x28>
 1cc:	b1 9a       	sbi	0x16, 1	; 22
 1ce:	82 e0       	ldi	r24, 0x02	; 2
 1d0:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__DATA_REGION_ORIGIN__+0xf>
 1d4:	78 94       	sei
 1d6:	08 95       	ret

000001d8 <main>:


int main(void)
{
	init();
 1d8:	0e 94 da 00 	call	0x1b4	; 0x1b4 <_Z4initv>
	init_display();
 1dc:	0e 94 a9 00 	call	0x152	; 0x152 <_Z12init_displayv>
	print_string("Ola Caralho");
 1e0:	80 e0       	ldi	r24, 0x00	; 0
 1e2:	91 e0       	ldi	r25, 0x01	; 1
 1e4:	0e 94 c2 00 	call	0x184	; 0x184 <_Z12print_stringPc>
 1e8:	ff cf       	rjmp	.-2      	; 0x1e8 <main+0x10>

000001ea <_GLOBAL__sub_I_relogio>:
#define MAX_STRING 16

#define BOUNCE 8


class c_relogio
 1ea:	10 92 0d 01 	sts	0x010D, r1	; 0x80010d <__data_end+0x1>
 1ee:	10 92 0c 01 	sts	0x010C, r1	; 0x80010c <__data_end>
 1f2:	08 95       	ret

000001f4 <__tablejump2__>:
 1f4:	ee 0f       	add	r30, r30
 1f6:	ff 1f       	adc	r31, r31
 1f8:	05 90       	lpm	r0, Z+
 1fa:	f4 91       	lpm	r31, Z
 1fc:	e0 2d       	mov	r30, r0
 1fe:	09 94       	ijmp

00000200 <_exit>:
 200:	f8 94       	cli

00000202 <__stop_program>:
 202:	ff cf       	rjmp	.-2      	; 0x202 <__stop_program>
